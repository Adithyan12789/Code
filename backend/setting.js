require('dotenv').config();

module.exports = {
  _id: "6891c8cabe6154302627a96a",
  currency: {
    name: process.env.CURRENCY_NAME,
    symbol: process.env.CURRENCY_SYMBOL,
    countryCode: process.env.CURRENCY_COUNTRY_CODE,
    currencyCode: process.env.CURRENCY_CODE,
    isDefault: process.env.IS_DEFAULT_CURRENCY === 'true',
  },
  storage: {
    awsS3: process.env.AWS_S3 === 'true',
    digitalOcean: process.env.DIGITAL_OCEAN === 'true',
    local: process.env.LOCAL === 'true',
  },
  android: {
    google: {
      interstitial: process.env.ANDROID_INTERSTITIAL,
      native: process.env.ANDROID_NATIVE,
      reward: process.env.ANDROID_REWARD,
    },
  },
  ios: {
    google: {
      interstitial: process.env.IOS_INTERSTITIAL,
      native: process.env.IOS_NATIVE,
      reward: process.env.IOS_REWARD,
    },
  },
  googlePlaySwitch: process.env.GOOGLE_PLAY_SWITCH === 'true',
  stripeSwitch: process.env.STRIPE_SWITCH === 'true',
  stripePublishableKey: process.env.STRIPE_PUBLISHABLE_KEY,
  stripeSecretKey: process.env.STRIPE_SECRET_KEY,
  razorPaySwitch: process.env.RAZORPAY_SWITCH === 'true',
  razorPayId: process.env.RAZORPAY_ID,
  razorSecretKey: process.env.RAZOR_SECRET_KEY,
  flutterWaveId: process.env.FLUTTERWAVE_ID,
  flutterWaveSwitch: process.env.FLUTTERWAVE_SWITCH === 'true',
  privacyPolicyLink: process.env.PRIVACY_POLICY_LINK,
  termsOfUsePolicyLink: process.env.TERMS_OF_USE_POLICY_LINK,
  durationOfShorts: Number(process.env.DURATION_OF_SHORTS),
  minCoinForCashOut: Number(process.env.MIN_COIN_FOR_CASHOUT),
  minWithdrawalRequestedCoin: Number(process.env.MIN_WITHDRAWAL_REQUESTED_COIN),
  referralRewardCoins: Number(process.env.REFERRAL_REWARD_COINS),
  watchingVideoRewardCoins: Number(process.env.WATCHING_VIDEO_REWARD_COINS),
  commentingRewardCoins: Number(process.env.COMMENTING_REWARD_COINS),
  likeVideoRewardCoins: Number(process.env.LIKE_VIDEO_REWARD_COINS),
  loginRewardCoins: Number(process.env.LOGIN_REWARD_COINS),
  maxAdPerDay: Number(process.env.MAX_ADS_PER_DAY),
  isGoogle: process.env.IS_GOOGLE === 'true',
  privateKey: {
    type: process.env.FIREBASE_TYPE,
    project_id: process.env.FIREBASE_PROJECT_ID,
    private_key_id: process.env.FIREBASE_PRIVATE_KEY_ID,
    private_key: process.env.FIREBASE_PRIVATE_KEY.replace(/\\n/g, '\n'),
    client_email: process.env.FIREBASE_CLIENT_EMAIL,
    client_id: process.env.FIREBASE_CLIENT_ID,
    auth_uri: process.env.FIREBASE_AUTH_URI,
    token_uri: process.env.FIREBASE_TOKEN_URI,
    auth_provider_x509_cert_url: process.env.FIREBASE_AUTH_PROVIDER_CERT_URL,
    client_x509_cert_url: process.env.FIREBASE_CLIENT_CERT_URL,
    universe_domain: process.env.FIREBASE_UNIVERSE_DOMAIN,
  },
  createdAt: "2024-10-21T11:47:03.908Z",
  updatedAt: "2025-06-13T10:49:15.218Z",
  freeEpisodesForNonVip: Number(process.env.FREE_EPISODES_FOR_NON_VIP),
  contactEmail: process.env.CONTACT_EMAIL,
  resendApiKey: process.env.RESEND_API_KEY,
  awsAccessKey: process.env.AWS_ACCESS_KEY,
  awsBucketName: process.env.AWS_BUCKET_NAME,
  awsEndpoint: process.env.AWS_ENDPOINT,
  awsHostname: process.env.AWS_HOSTNAME,
  awsRegion: process.env.AWS_REGION,
  awsSecretKey: process.env.AWS_SECRET_KEY,
  doAccessKey: process.env.DO_ACCESS_KEY,
  doBucketName: process.env.DO_BUCKET_NAME,
  doEndpoint: process.env.DO_ENDPOINT,
  doHostname: process.env.DO_HOSTNAME,
  doRegion: process.env.DO_REGION,
  doSecretKey: process.env.DO_SECRET_KEY,
};
